<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
  namespace = "인터페이스의 패키지 및 이름"과 일치해야 한다.
 -->
<mapper namespace="com.lime.dao.MarketDao">

  <!--  테이블의 컬럼과 객체 필드를 연결한다. -->
  <resultMap type="market" id="marketMap">
    <id column="item_id" property="itemId"/>
    <result column="item_name" property="itemName"/>
    <result column="item_cost" property="itemCost"/>
    <result column="content" property="content"/>
    <result column="rgt_date" property="rgtDate"/>
    <result column="mdfy_date" property="mdfyDate"/>
    <result column="trans_state" property="transState"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="region_name" property="regionName"/>
    <result column="city_name" property="cityName"/>
  </resultMap>
  

  <!-- 
    id => 인터페이스의 메서드 이름과 일치해야 한다.
   -->
  <select id="findAll" resultMap="marketMap">
SELECT 
      i.item_name as item_name,
      i.item_cost as item_cost,
      rg.region_name as region_name,
      ct.city_name as city_name,
      i.view_cnt as view_cnt,
      i.rgt_date as rgt_date,
      i.trans_state as trans_state
   FROM item i
   LEFT JOIN city ct
   ON i.city_id = ct.city_id
   LEFT JOIN region rg 
   ON ct.region_id = rg.region_id
   order by rgt_date desc
   
   </select>
   
   <select id="findByRegion" resultMap="marketMap" parameterType="string">
SELECT 
      i.item_name as item_name,
      i.item_cost as item_cost,
      replace(rg.region_name, '\r', '') as region_name,
      replace(ct.city_name, '\r', '') as city_name,
      i.view_cnt as view_cnt,
      i.rgt_date as rgt_date,
      i.trans_state as trans_state
   FROM item i
   LEFT JOIN city ct
   ON i.city_id = ct.city_id
   LEFT JOIN region rg 
   ON ct.region_id = rg.region_id
   where region_name=#{regionName}
   order by rgt_date desc

  </select>
  
    <select id="findByNo" resultMap="marketMap" parameterType="int">
	  select
	    board_no,
	    title,
	    content,
	    created_date,
	    view_count
	  from
	    ml_board
	  where
	    board_no=#{no}
  </select>
  
  <insert id="insert" parameterType="Market">
    insert into ml_board(title,content)
    values(#{title},#{content})
  </insert>
  
  <update id="update" parameterType="Market">
    update ml_board set 
      title=#{title},
      content=#{content} 
    where 
      board_no=#{no}
  </update>
  
  <select id="countAll" resultType="int">
    select count(*) from ml_board
  </select>
  
  <delete id="delete" parameterType="int">
    delete from ml_board
    where board_no=#{no}
  </delete>
  
  <update id="increaseViewCount" parameterType="int">
    update ml_board set
      view_count=view_count + 1 
    where board_no=#{no}
  </update>
  
</mapper>